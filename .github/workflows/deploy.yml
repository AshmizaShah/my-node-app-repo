name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build for Production
        run: |
          cd app
          zip -r ../myapp-prod.zip *
        working-directory: ${{ github.workspace }}
        env:
          NODE_ENV: production

      - name: Upload to S3 for Production
        uses: atlassian/aws-code-deploy@0.2.10
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          APPLICATION_NAME: ${{ secrets.APPLICATION_NAME }}
          ZIP_FILE: 'myapp-prod.zip'
          COMMAND: 'upload'
          S3_KEY: 'production/myapp-prod.zip'

      - name: Deploy to Production
        uses: atlassian/aws-code-deploy@0.2.10
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          APPLICATION_NAME: ${{ secrets.APPLICATION_NAME }}
          DEPLOYMENT_GROUP: ${{ secrets.PROD_DEPLOYMENT_GROUP }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          ZIP_FILE: 'myapp-prod.zip'
          COMMAND: 'deploy'
          IGNORE_APPLICATION_STOP_FAILURES: 'true'
          FILE_EXISTS_BEHAVIOR: 'OVERWRITE'
          WAIT: 'true'
        if: success()

